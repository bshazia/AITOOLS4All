{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const {\n    response,\n    handleSendMessage\n  } = useChat(); // No need for setMessage here\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const chatMessagesRef = useRef(null);\n  const sendMessage = async () => {\n    if (userMessage.trim() !== \"\") {\n      const newMessages = [...messages, {\n        sender: \"You\",\n        message: userMessage\n      }];\n      setMessages(newMessages);\n      try {\n        await handleSendMessage(userMessage); // Pass userMessage here\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"Bot\",\n          message: response\n        }]);\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"Bot\",\n          message: \"An error occurred. Please try again later.\"\n        }]);\n      }\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: userMessage,\n          placeholder: \"Type your message...\",\n          onChange: e => setUserMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgsend,\n            alt: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"NRAUhh7w1sOssUITw5v3y6GC6dI=\", false, function () {\n  return [useChat];\n});\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","imgsend","useChat","jsxDEV","_jsxDEV","ChatComponent","_s","response","handleSendMessage","messages","setMessages","userMessage","setUserMessage","chatMessagesRef","sendMessage","trim","newMessages","sender","message","prevMessages","error","handleKeyPress","event","key","current","scrollTop","scrollHeight","className","children","ref","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onKeyPress","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\n\nfunction ChatComponent() {\n  const { response, handleSendMessage } = useChat(); // No need for setMessage here\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const chatMessagesRef = useRef(null);\n\n  const sendMessage = async () => {\n    if (userMessage.trim() !== \"\") {\n      const newMessages = [\n        ...messages,\n        { sender: \"You\", message: userMessage },\n      ];\n      setMessages(newMessages);\n\n      try {\n        await handleSendMessage(userMessage); // Pass userMessage here\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { sender: \"Bot\", message: response },\n        ]);\n      } catch (error) {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            sender: \"Bot\",\n            message: \"An error occurred. Please try again later.\",\n          },\n        ]);\n      }\n\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\" ref={chatMessagesRef}>\n          {messages.map((msg, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>{msg.sender}:</strong> {msg.message}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input-container\">\n          <input\n            type=\"text\"\n            className=\"chat-input\"\n            value={userMessage}\n            placeholder=\"Type your message...\"\n            onChange={(e) => setUserMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button className=\"send-button\" onClick={sendMessage}>\n            <img src={imgsend} alt=\"Send\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}