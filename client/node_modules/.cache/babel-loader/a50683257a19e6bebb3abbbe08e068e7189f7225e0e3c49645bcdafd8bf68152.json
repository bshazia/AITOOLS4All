{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/EntryPage.js\",\n  _s = $RefreshSig$();\n// src/components/EntryPage.js\nimport React, { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport \"../styles/EntryPage.css\"; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryPage = ({\n  className,\n  onClose,\n  initialView = \"login\"\n}) => {\n  _s();\n  const [currentView, setCurrentView] = useState(initialView); // default to login view\n  // Update current view whenever initialView prop changes\n  useEffect(() => {\n    setCurrentView(initialView);\n  }, [initialView]);\n  const handleToggle = view => {\n    setCurrentView(view);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === \"login\" ? \"active\" : \"\",\n          onClick: () => handleToggle(\"login\"),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === \"register\" ? \"active\" : \"\",\n          onClick: () => handleToggle(\"register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container-e\",\n        children: currentView === \"login\" ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 82\n        }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn-e\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 74\n  }, this);\n};\n_s(EntryPage, \"Hz6HWXtzMxqwifXso+A0vmCnnE4=\");\n_c = EntryPage;\nexport default EntryPage;\nvar _c;\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"names":["React","useState","LoginForm","RegisterForm","jsxDEV","_jsxDEV","EntryPage","className","onClose","initialView","_s","currentView","setCurrentView","useEffect","handleToggle","view","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/EntryPage.js"],"sourcesContent":["// src/components/EntryPage.js\nimport React, { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport \"../styles/EntryPage.css\"; // Ensure this path is correct\n\nconst EntryPage = ({ className, onClose, initialView = \"login\" }) => {\n                                                                       const [\n                                                                         currentView,\n                                                                         setCurrentView,\n                                                                       ] = useState(\n                                                                         initialView\n                                                                       ); // default to login view\n                                                                       // Update current view whenever initialView prop changes\n                                                                       useEffect(() => {\n                                                                         setCurrentView(\n                                                                           initialView\n                                                                         );\n                                                                       }, [\n                                                                         initialView,\n                                                                       ]);\n                                                                       const handleToggle = (\n                                                                         view\n                                                                       ) => {\n                                                                         setCurrentView(\n                                                                           view\n                                                                         );\n                                                                       };\n\n                                                                       return (\n                                                                         <div\n                                                                           className={\n                                                                             className\n                                                                           }\n                                                                         >\n                                                                           <div className=\"entry-popup\">\n                                                                             <div className=\"tabs-form\">\n                                                                               <button\n                                                                                 className={\n                                                                                   currentView ===\n                                                                                   \"login\"\n                                                                                     ? \"active\"\n                                                                                     : \"\"\n                                                                                 }\n                                                                                 onClick={() =>\n                                                                                   handleToggle(\n                                                                                     \"login\"\n                                                                                   )\n                                                                                 }\n                                                                               >\n                                                                                 Log\n                                                                                 In\n                                                                               </button>\n                                                                               <button\n                                                                                 className={\n                                                                                   currentView ===\n                                                                                   \"register\"\n                                                                                     ? \"active\"\n                                                                                     : \"\"\n                                                                                 }\n                                                                                 onClick={() =>\n                                                                                   handleToggle(\n                                                                                     \"register\"\n                                                                                   )\n                                                                                 }\n                                                                               >\n                                                                                 Register\n                                                                               </button>\n                                                                             </div>\n                                                                             <div className=\"form-container-e\">\n                                                                               {currentView ===\n                                                                               \"login\" ? (\n                                                                                 <LoginForm />\n                                                                               ) : (\n                                                                                 <RegisterForm />\n                                                                               )}\n                                                                             </div>\n                                                                             <button\n                                                                               className=\"close-btn-e\"\n                                                                               onClick={\n                                                                                 onClose\n                                                                               }\n                                                                             >\n                                                                               Close\n                                                                             </button>\n                                                                           </div>\n                                                                         </div>\n                                                                       );\n                                                                     };\n\nexport default EntryPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC,WAAW,GAAG;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACE,MAAM,CACJC,WAAW,EACXC,cAAc,CACf,GAAGX,QAAQ,CACVQ,WACF,CAAC,CAAC,CAAC;EACH;EACAI,SAAS,CAAC,MAAM;IACdD,cAAc,CACZH,WACF,CAAC;EACH,CAAC,EAAE,CACDA,WAAW,CACZ,CAAC;EACF,MAAMK,YAAY,GAChBC,IAAI,IACD;IACHH,cAAc,CACZG,IACF,CAAC;EACH,CAAC;EAED,oBACEV,OAAA;IACEE,SAAS,EACPA,SACD;IAAAS,QAAA,eAEDX,OAAA;MAAKE,SAAS,EAAC,aAAa;MAAAS,QAAA,gBAC1BX,OAAA;QAAKE,SAAS,EAAC,WAAW;QAAAS,QAAA,gBACxBX,OAAA;UACEE,SAAS,EACPI,WAAW,KACX,OAAO,GACH,QAAQ,GACR,EACL;UACDM,OAAO,EAAEA,CAAA,KACPH,YAAY,CACV,OACF,CACD;UAAAE,QAAA,EACF;QAGD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThB,OAAA;UACEE,SAAS,EACPI,WAAW,KACX,UAAU,GACN,QAAQ,GACR,EACL;UACDM,OAAO,EAAEA,CAAA,KACPH,YAAY,CACV,UACF,CACD;UAAAE,QAAA,EACF;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNhB,OAAA;QAAKE,SAAS,EAAC,kBAAkB;QAAAS,QAAA,EAC9BL,WAAW,KACZ,OAAO,gBACLN,OAAA,CAACH,SAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEbhB,OAAA,CAACF,YAAY;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAChB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNhB,OAAA;QACEE,SAAS,EAAC,aAAa;QACvBU,OAAO,EACLT,OACD;QAAAQ,QAAA,EACF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAlFjEJ,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAoFf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}