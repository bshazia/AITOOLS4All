{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\"; // Ensure you have this utility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const {\n    register\n  } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const validateEmail = email => {\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setNameError(\"\");\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Validate inputs\n    if (name.trim() === \"\") {\n      setNameError(\"Name is required.\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setEmailError(\"Invalid email address.\");\n      return;\n    }\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required.\");\n      return;\n    }\n    try {\n      register({\n        name: sanitizeInput(name),\n        email: sanitizeInput(email),\n        password: sanitizeInput(password)\n      });\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n  const sanitizeInput = input => {\n    return DOMPurify.sanitize(escapeHtml(input));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: nameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"sT0u5dpseHw9Mw/xrktSvD3NXLY=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","useContext","AuthContext","DOMPurify","escapeHtml","jsxDEV","_jsxDEV","RegisterForm","_s","register","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","validateEmail","emailRegex","test","handleSubmit","e","preventDefault","trim","sanitizeInput","error","console","input","sanitize","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/RegisterForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\"; // Ensure you have this utility\n\nconst RegisterForm = () => {\n  const { register } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const validateEmail = (email) => {\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setNameError(\"\");\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Validate inputs\n    if (name.trim() === \"\") {\n      setNameError(\"Name is required.\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setEmailError(\"Invalid email address.\");\n      return;\n    }\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required.\");\n      return;\n    }\n\n    try {\n      register({\n        name: sanitizeInput(name),\n        email: sanitizeInput(email),\n        password: sanitizeInput(password),\n      });\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  const sanitizeInput = (input) => {\n    return DOMPurify.sanitize(escapeHtml(input));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Name\"\n      />\n      {nameError && <div className=\"error\">{nameError}</div>}\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n      />\n      {emailError && <div className=\"error\">{emailError}</div>}\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      {passwordError && <div className=\"error\">{passwordError}</div>}\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}