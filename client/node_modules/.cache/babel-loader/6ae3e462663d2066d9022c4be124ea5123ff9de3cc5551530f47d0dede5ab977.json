{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport { Link } from \"react-router-dom\";\nimport useChat from \"../hooks/useChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const {\n    message,\n    setMessage,\n    response,\n    error,\n    handleSendMessage\n  } = useChat();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const chatMessagesRef = useRef(null);\n  const sendMessage = async () => {\n    if (userMessage.trim() !== \"\") {\n      const newMessages = [...messages, {\n        sender: \"You\",\n        message: userMessage\n      }];\n      setMessages(newMessages);\n      setUserMessage(\"\");\n      try {\n        // Use the hook's function to send the message\n        await handleSendMessage(); // This will update the response state\n        // Add the bot's response to the messages\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"Bot\",\n          message: response\n        }]);\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"Bot\",\n          message: \"An error occurred. Please try again later.\"\n        }]);\n      }\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/MainPage\",\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${sidebarOpen ? \"open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-toggle\",\n        onClick: () => setSidebarOpen(!sidebarOpen),\n        children: sidebarOpen ? \"Close History\" : \"Open History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), \" \", msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: userMessage,\n          placeholder: \"Type your message...\",\n          onChange: e => setUserMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgsend,\n            alt: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"E3Hr+uGqAHz9dzafr1WhXRkUE5g=\", false, function () {\n  return [useChat];\n});\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","imgsend","Link","useChat","jsxDEV","_jsxDEV","ChatComponent","_s","message","setMessage","response","error","handleSendMessage","messages","setMessages","userMessage","setUserMessage","sidebarOpen","setSidebarOpen","chatMessagesRef","sendMessage","trim","newMessages","sender","prevMessages","handleKeyPress","event","key","current","scrollTop","scrollHeight","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","ref","type","value","placeholder","onChange","e","target","onKeyPress","src","alt","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport { Link } from \"react-router-dom\";\nimport useChat from \"../hooks/useChat\";\n\nfunction ChatComponent() {\n  const { message, setMessage, response, error, handleSendMessage } = useChat();\n\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const chatMessagesRef = useRef(null);\n\n  const sendMessage = async () => {\n    if (userMessage.trim() !== \"\") {\n      const newMessages = [\n        ...messages,\n        { sender: \"You\", message: userMessage },\n      ];\n      setMessages(newMessages);\n      setUserMessage(\"\");\n\n      try {\n        // Use the hook's function to send the message\n        await handleSendMessage(); // This will update the response state\n        // Add the bot's response to the messages\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { sender: \"Bot\", message: response },\n        ]);\n      } catch (error) {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            sender: \"Bot\",\n            message: \"An error occurred. Please try again later.\",\n          },\n        ]);\n      }\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"chat-app\">\n      <Link to=\"/MainPage\">Homepage</Link>\n\n      <div className={`sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\n        <button\n          className=\"sidebar-toggle\"\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          {sidebarOpen ? \"Close History\" : \"Open History\"}\n        </button>\n        <div className=\"chat-history\">\n          <h3>Chat History</h3>\n          <ul>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{msg.sender}:</strong> {msg.message}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\" ref={chatMessagesRef}>\n          {messages.map((msg, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>{msg.sender}:</strong> {msg.message}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input-container\">\n          <input\n            type=\"text\"\n            className=\"chat-input\"\n            value={userMessage}\n            placeholder=\"Type your message...\"\n            onChange={(e) => setUserMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button className=\"send-button\" onClick={sendMessage}>\n            <img src={imgsend} alt=\"Send\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}