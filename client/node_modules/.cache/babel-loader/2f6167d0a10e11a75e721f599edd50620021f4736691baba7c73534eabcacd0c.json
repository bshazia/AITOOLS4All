{"ast":null,"code":"import axios from \"axios\";\n\n// Function to fetch CSRF token from backend\nexport const fetchCsrfToken = async () => {\n  try {\n    const response = await axios.get(\"/api/get-csrf-token\");\n    return response.data.csrfToken;\n  } catch (error) {\n    console.error(\"Error fetching CSRF token:\", error);\n    throw new Error(\"Failed to fetch CSRF token\");\n  }\n};\n\n// Define the API URL\nconst API_URL = `${process.env.REACT_APP_API_URL}/chat`; // Ensure this environment variable is set\n\n// Function to send a message to the ChatGPT endpoint\nexport const sendMessageToChatGPT = async (message, language = \"en\") => {\n  try {\n    const csrfToken = await fetchCsrfToken(); // Fetch the CSRF token\n    const response = await axios.post(API_URL, {\n      message: message,\n      language: language\n    }, {\n      headers: {\n        \"X-CSRF-Token\": csrfToken // Include CSRF token in the request headers\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error sending message to ChatGPT:\", error);\n    throw new Error(\"Failed to communicate with ChatGPT\");\n  }\n};","map":{"version":3,"names":["axios","fetchCsrfToken","response","get","data","csrfToken","error","console","Error","API_URL","process","env","REACT_APP_API_URL","sendMessageToChatGPT","message","language","post","headers"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/services/chatGPTService.js"],"sourcesContent":["import axios from \"axios\";\n\n// Function to fetch CSRF token from backend\nexport const fetchCsrfToken = async () => {\n  try {\n    const response = await axios.get(\"/api/get-csrf-token\");\n    return response.data.csrfToken;\n  } catch (error) {\n    console.error(\"Error fetching CSRF token:\", error);\n    throw new Error(\"Failed to fetch CSRF token\");\n  }\n};\n\n// Define the API URL\nconst API_URL = `${process.env.REACT_APP_API_URL}/chat`; // Ensure this environment variable is set\n\n// Function to send a message to the ChatGPT endpoint\nexport const sendMessageToChatGPT = async (message, language = \"en\") => {\n  try {\n    const csrfToken = await fetchCsrfToken(); // Fetch the CSRF token\n    const response = await axios.post(\n      API_URL,\n      {\n        message: message,\n        language: language,\n      },\n      {\n        headers: {\n          \"X-CSRF-Token\": csrfToken, // Include CSRF token in the request headers\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error sending message to ChatGPT:\", error);\n    throw new Error(\"Failed to communicate with ChatGPT\");\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,qBAAqB,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI,CAACC,SAAS;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,OAAO,CAAC,CAAC;;AAEzD;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,GAAG,IAAI,KAAK;EACtE,IAAI;IACF,MAAMV,SAAS,GAAG,MAAMJ,cAAc,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACgB,IAAI,CAC/BP,OAAO,EACP;MACEK,OAAO,EAAEA,OAAO;MAChBC,QAAQ,EAAEA;IACZ,CAAC,EACD;MACEE,OAAO,EAAE;QACP,cAAc,EAAEZ,SAAS,CAAE;MAC7B;IACF,CACF,CAAC;IACD,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAM,IAAIE,KAAK,CAAC,oCAAoC,CAAC;EACvD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}