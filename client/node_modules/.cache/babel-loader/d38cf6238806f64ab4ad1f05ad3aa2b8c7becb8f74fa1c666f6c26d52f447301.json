{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport authService from '../services/authService';\nconst useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = async userData => {\n    try {\n      const response = await authService.login(userData);\n      localStorage.setItem('token', response.token); // Save JWT token\n      setUser(response.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setIsAuthenticated(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      await authService.register(userData);\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return {\n    user,\n    isAuthenticated,\n    login,\n    register,\n    logout\n  };\n};\n_s(useAuth, \"k19B3VQCOMbqjP9Ul958Nm6p/lo=\");\nexport default useAuth;","map":{"version":3,"names":["useState","authService","useAuth","_s","user","setUser","isAuthenticated","setIsAuthenticated","login","userData","response","localStorage","setItem","token","error","console","register","logout"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/hooks/useAuth.js"],"sourcesContent":["import { useState } from 'react';\nimport authService from '../services/authService';\n\nconst useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const login = async (userData) => {\n    try {\n      const response = await authService.login(userData);\n      localStorage.setItem('token', response.token);  // Save JWT token\n      setUser(response.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      await authService.register(userData);\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return { user, isAuthenticated, login, register, logout };\n};\n\nexport default useAuth;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMQ,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,WAAW,CAACO,KAAK,CAACC,QAAQ,CAAC;MAClDE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAE;MAChDR,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;MACtBG,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCP,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAOP,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMR,WAAW,CAACe,QAAQ,CAACP,QAAQ,CAAC;IACtC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBhB,WAAW,CAACgB,MAAM,CAAC,CAAC;IACpBZ,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,OAAO;IAAEH,IAAI;IAAEE,eAAe;IAAEE,KAAK;IAAEQ,QAAQ;IAAEC;EAAO,CAAC;AAC3D,CAAC;AAACd,EAAA,CA/BID,OAAO;AAiCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}