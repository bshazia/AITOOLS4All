{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useChat.js\nimport { useState } from \"react\";\nimport { fetchCsrfToken, sendMessageToChatGPT } from \"../services/chatGPTService\";\nconst useChat = () => {\n  _s();\n  const [response, setResponse] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSendMessage = async message => {\n    setError(\"\"); // Reset error state\n    try {\n      const csrfToken = await fetchCsrfToken();\n      const chatGptResponse = await sendMessageToChatGPT(message, csrfToken); // Pass the message here\n      setResponse(chatGptResponse);\n    } catch (error) {\n      setError(\"Error sending message to ChatGPT\");\n      console.error(\"Error:\", error);\n    }\n  };\n  return {\n    response,\n    error,\n    handleSendMessage // No need for setMessage\n  };\n};\n_s(useChat, \"DBk2gB5uBOpJ6hDQXODgO2wXndk=\");\nexport default useChat;","map":{"version":3,"names":["useState","fetchCsrfToken","sendMessageToChatGPT","useChat","_s","response","setResponse","error","setError","handleSendMessage","message","csrfToken","chatGptResponse","console"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/hooks/useChat.js"],"sourcesContent":["// src/hooks/useChat.js\nimport { useState } from \"react\";\nimport {\n  fetchCsrfToken,\n  sendMessageToChatGPT,\n} from \"../services/chatGPTService\";\n\nconst useChat = () => {\n  const [response, setResponse] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSendMessage = async (message) => {\n    setError(\"\"); // Reset error state\n    try {\n      const csrfToken = await fetchCsrfToken();\n      const chatGptResponse = await sendMessageToChatGPT(message, csrfToken); // Pass the message here\n      setResponse(chatGptResponse);\n    } catch (error) {\n      setError(\"Error sending message to ChatGPT\");\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return {\n    response,\n    error,\n    handleSendMessage, // No need for setMessage\n  };\n};\n\nexport default useChat;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,cAAc,EACdC,oBAAoB,QACf,4BAA4B;AAEnC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3CF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,IAAI;MACF,MAAMG,SAAS,GAAG,MAAMV,cAAc,CAAC,CAAC;MACxC,MAAMW,eAAe,GAAG,MAAMV,oBAAoB,CAACQ,OAAO,EAAEC,SAAS,CAAC,CAAC,CAAC;MACxEL,WAAW,CAACM,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,QAAQ,CAAC,kCAAkC,CAAC;MAC5CK,OAAO,CAACN,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,OAAO;IACLF,QAAQ;IACRE,KAAK;IACLE,iBAAiB,CAAE;EACrB,CAAC;AACH,CAAC;AAACL,EAAA,CArBID,OAAO;AAuBb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}