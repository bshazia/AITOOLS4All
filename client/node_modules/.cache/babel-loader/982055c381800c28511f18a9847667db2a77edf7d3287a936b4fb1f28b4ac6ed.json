{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\";\nimport ChatSidebar from \"./ChatSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const {\n    response,\n    handleSendMessage\n  } = useChat();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [sidebarOpen, setSidebarOpen] = useState(false); // State for sidebar\n  const chatMessagesRef = useRef(null);\n  const sendMessage = async () => {\n    const sanitizedMessage = sanitizeMessage(userMessage);\n    if (sanitizedMessage.trim() !== \"\") {\n      const newMessages = [...messages, {\n        sender: \"You\",\n        message: sanitizedMessage\n      }];\n      setMessages(newMessages);\n      try {\n        await handleSendMessage(sanitizedMessage); // Pass sanitizedMessage here\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"AI 4.O\",\n          message: \"An error occurred. Please try again later.\"\n        }]);\n      }\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n  const sanitizeMessage = message => {\n    // Escape HTML entities to prevent XSS\n    return escapeHtml(DOMPurify.sanitize(message));\n  };\n\n  // Update chat messages when response changes\n  useEffect(() => {\n    if (response) {\n      const sanitizedResponse = sanitizeMessage(response);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"AI 4.O\",\n        message: sanitizedResponse\n      }]);\n    }\n  }, [response]); // This will trigger when `response` is updated\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(ChatSidebar, {\n      sidebarOpen: sidebarOpen,\n      setSidebarOpen: setSidebarOpen,\n      messages: messages // Pass messages to the sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          dangerouslySetInnerHTML: {\n            __html: DOMPurify.sanitize(`<strong>${escapeHtml(msg.sender)}:</strong> ${escapeHtml(msg.message)}`)\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: userMessage,\n          placeholder: \"Type your message...\",\n          onChange: e => setUserMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgsend,\n            alt: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"NxxHU+8xcyp0LKMQ6GrFhUk8OSQ=\", false, function () {\n  return [useChat];\n});\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","imgsend","useChat","DOMPurify","escapeHtml","ChatSidebar","jsxDEV","_jsxDEV","ChatComponent","_s","response","handleSendMessage","messages","setMessages","userMessage","setUserMessage","sidebarOpen","setSidebarOpen","chatMessagesRef","sendMessage","sanitizedMessage","sanitizeMessage","trim","newMessages","sender","message","error","prevMessages","sanitize","sanitizedResponse","handleKeyPress","event","key","current","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","dangerouslySetInnerHTML","__html","type","value","placeholder","onChange","e","target","onKeyPress","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\"; \nimport ChatSidebar from \"./ChatSidebar\";\n\nfunction ChatComponent() {\n  const { response, handleSendMessage } = useChat();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [sidebarOpen, setSidebarOpen] = useState(false); // State for sidebar\n  const chatMessagesRef = useRef(null);\n\n  const sendMessage = async () => {\n    const sanitizedMessage = sanitizeMessage(userMessage);\n\n    if (sanitizedMessage.trim() !== \"\") {\n      const newMessages = [\n        ...messages,\n        { sender: \"You\", message: sanitizedMessage },\n      ];\n      setMessages(newMessages);\n\n      try {\n        await handleSendMessage(sanitizedMessage); // Pass sanitizedMessage here\n      } catch (error) {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            sender: \"AI 4.O\",\n            message: \"An error occurred. Please try again later.\",\n          },\n        ]);\n      }\n\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n\n  const sanitizeMessage = (message) => {\n    // Escape HTML entities to prevent XSS\n    return escapeHtml(DOMPurify.sanitize(message));\n  };\n\n  // Update chat messages when response changes\n  useEffect(() => {\n    if (response) {\n      const sanitizedResponse = sanitizeMessage(response);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"AI 4.O\", message: sanitizedResponse },\n      ]);\n    }\n  }, [response]); // This will trigger when `response` is updated\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"chat-app\">\n      <ChatSidebar\n        sidebarOpen={sidebarOpen}\n        setSidebarOpen={setSidebarOpen}\n        messages={messages} // Pass messages to the sidebar\n      />\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\" ref={chatMessagesRef}>\n          {messages.map((msg, index) => (\n            <div\n              key={index}\n              className=\"chat-message\"\n              dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(\n                  `<strong>${escapeHtml(msg.sender)}:</strong> ${escapeHtml(\n                    msg.message\n                  )}`\n                ),\n              }}\n            />\n          ))}\n        </div>\n        <div className=\"chat-input-container\">\n          <input\n            type=\"text\"\n            className=\"chat-input\"\n            value={userMessage}\n            placeholder=\"Type your message...\"\n            onChange={(e) => setUserMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button className=\"send-button\" onClick={sendMessage}>\n            <img src={imgsend} alt=\"Send\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}