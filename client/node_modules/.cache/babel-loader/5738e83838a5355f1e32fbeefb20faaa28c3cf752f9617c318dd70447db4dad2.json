{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/EntryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport authService from \"../services/authServices\";\nimport AuthForm from \"./AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryPage = ({\n  className,\n  onClose\n}) => {\n  _s();\n  const [currentView, setCurrentView] = useState(\"signUp\");\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const [csrfToken, setCsrfToken] = useState(\"\");\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/csrf-token`, {\n          withCredentials: true\n        });\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error(\"Error fetching CSRF token:\", error);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (currentView === \"signUp\") {\n        await authService.register({\n          email: formData.email,\n          password: formData.password,\n          name: formData.name\n        }, csrfToken);\n        alert(\"Registration successful!\");\n      } else {\n        await authService.login({\n          email: formData.email,\n          password: formData.password\n        }, csrfToken);\n        alert(\"Login successful!\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  const toggleView = () => {\n    setCurrentView(currentView === \"signUp\" ? \"logIn\" : \"signUp\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n      type: currentView,\n      formData: formData,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      toggleView: toggleView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(EntryPage, \"r8D0g4qvvxXeY1oz+rMtqhvK/1U=\");\n_c = EntryPage;\nexport default EntryPage;\nvar _c;\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"names":["React","useState","useEffect","authService","AuthForm","jsxDEV","_jsxDEV","EntryPage","className","onClose","_s","currentView","setCurrentView","formData","setFormData","email","password","name","csrfToken","setCsrfToken","fetchCsrfToken","response","axios","get","process","env","REACT_APP_API_URL","withCredentials","data","error","console","handleChange","e","target","value","handleSubmit","preventDefault","register","alert","login","toggleView","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/EntryPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport authService from \"../services/authServices\";\nimport AuthForm from \"./AuthForm\";\n\nconst EntryPage = ({ className, onClose }) => {\n  const [currentView, setCurrentView] = useState(\"signUp\");\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n  });\n  const [csrfToken, setCsrfToken] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/csrf-token`,\n          {\n            withCredentials: true,\n          }\n        );\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error(\"Error fetching CSRF token:\", error);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (currentView === \"signUp\") {\n        await authService.register(\n          {\n            email: formData.email,\n            password: formData.password,\n            name: formData.name,\n          },\n          csrfToken\n        );\n        alert(\"Registration successful!\");\n      } else {\n        await authService.login(\n          { email: formData.email, password: formData.password },\n          csrfToken\n        );\n        alert(\"Login successful!\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n\n  const toggleView = () => {\n    setCurrentView(currentView === \"signUp\" ? \"logIn\" : \"signUp\");\n  };\n\n  return (\n    <div className={className}>\n      <AuthForm\n        type={currentView}\n        formData={formData}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        toggleView={toggleView}\n      />\n      <button className=\"close-btn\" onClick={onClose}>\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default EntryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}