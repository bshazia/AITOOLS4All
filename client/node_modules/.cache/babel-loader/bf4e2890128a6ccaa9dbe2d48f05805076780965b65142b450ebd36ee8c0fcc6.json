{"ast":null,"code":"import{useState,useContext}from\"react\";import{AuthContext}from\"../contexts/AuthContext\";import DOMPurify from\"dompurify\";import{escapeHtml}from\"../utils/securityUtils\";// Ensure you have this utility\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterForm=()=>{const{register}=useContext(AuthContext);const[name,setName]=useState(\"\");const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[nameError,setNameError]=useState(\"\");const[emailError,setEmailError]=useState(\"\");const[passwordError,setPasswordError]=useState(\"\");const validateEmail=email=>{// Basic email validation\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};const handleSubmit=e=>{e.preventDefault();setNameError(\"\");setEmailError(\"\");setPasswordError(\"\");// Validate inputs\nif(name.trim()===\"\"){setNameError(\"Name is required.\");return;}if(!validateEmail(email)){setEmailError(\"Invalid email address.\");return;}if(password.trim()===\"\"){setPasswordError(\"Password is required.\");return;}try{register({name:sanitizeInput(name),email:sanitizeInput(email),password:sanitizeInput(password)});}catch(error){console.error(\"Registration failed\",error);}};const sanitizeInput=input=>{return DOMPurify.sanitize(escapeHtml(input));};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),placeholder:\"Name\"}),nameError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:nameError}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\"}),emailError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:emailError}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password\"}),passwordError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:passwordError}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]});};export default RegisterForm;","map":{"version":3,"names":["useState","useContext","AuthContext","DOMPurify","escapeHtml","jsx","_jsx","jsxs","_jsxs","RegisterForm","register","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","validateEmail","emailRegex","test","handleSubmit","e","preventDefault","trim","sanitizeInput","error","console","input","sanitize","onSubmit","children","type","value","onChange","target","placeholder","className"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/RegisterForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\"; // Ensure you have this utility\n\nconst RegisterForm = () => {\n  const { register } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const validateEmail = (email) => {\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setNameError(\"\");\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Validate inputs\n    if (name.trim() === \"\") {\n      setNameError(\"Name is required.\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setEmailError(\"Invalid email address.\");\n      return;\n    }\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required.\");\n      return;\n    }\n\n    try {\n      register({\n        name: sanitizeInput(name),\n        email: sanitizeInput(email),\n        password: sanitizeInput(password),\n      });\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  const sanitizeInput = (input) => {\n    return DOMPurify.sanitize(escapeHtml(input));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Name\"\n      />\n      {nameError && <div className=\"error\">{nameError}</div>}\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n      />\n      {emailError && <div className=\"error\">{emailError}</div>}\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      {passwordError && <div className=\"error\">{passwordError}</div>}\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}