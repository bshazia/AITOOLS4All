{"ast":null,"code":"import{useState,useContext}from\"react\";import{AuthContext}from\"../contexts/AuthContext\";import DOMPurify from\"dompurify\";import{escapeHtml}from\"../utils/securityUtils\";// Ensure you have this utility\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=()=>{const{login}=useContext(AuthContext);const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[emailError,setEmailError]=useState(\"\");const[passwordError,setPasswordError]=useState(\"\");const validateEmail=email=>{// Basic email validation\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};const handleSubmit=async e=>{e.preventDefault();setEmailError(\"\");setPasswordError(\"\");// Validate inputs\nif(!validateEmail(email)){setEmailError(\"Invalid email address.\");return;}if(password.trim()===\"\"){setPasswordError(\"Password is required.\");return;}try{await login({email:sanitizeInput(email),password:sanitizeInput(password)});}catch(error){console.error(\"Login failed\",error);}};const sanitizeInput=input=>{return DOMPurify.sanitize(escapeHtml(input));};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\"}),emailError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:emailError}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password\"}),passwordError&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:passwordError}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]});};export default LoginForm;","map":{"version":3,"names":["useState","useContext","AuthContext","DOMPurify","escapeHtml","jsx","_jsx","jsxs","_jsxs","LoginForm","login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","validateEmail","emailRegex","test","handleSubmit","e","preventDefault","trim","sanitizeInput","error","console","input","sanitize","onSubmit","children","type","value","onChange","target","placeholder","className"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/LoginForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\"; // Ensure you have this utility\n\nconst LoginForm = () => {\n  const { login } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const validateEmail = (email) => {\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Validate inputs\n    if (!validateEmail(email)) {\n      setEmailError(\"Invalid email address.\");\n      return;\n    }\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required.\");\n      return;\n    }\n\n    try {\n      await login({\n        email: sanitizeInput(email),\n        password: sanitizeInput(password),\n      });\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  const sanitizeInput = (input) => {\n    return DOMPurify.sanitize(escapeHtml(input));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n      />\n      {emailError && <div className=\"error\">{emailError}</div>}\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      {passwordError && <div className=\"error\">{passwordError}</div>}\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC5C,OAASC,WAAW,KAAQ,yBAAyB,CACrD,MAAO,CAAAC,SAAS,KAAM,WAAW,CACjC,OAASC,UAAU,KAAQ,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAEC,KAAM,CAAC,CAAGT,UAAU,CAACC,WAAW,CAAC,CACzC,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACiB,aAAa,CAAEC,gBAAgB,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAmB,aAAa,CAAIR,KAAK,EAAK,CAC/B;AACA,KAAM,CAAAS,UAAU,CAAG,4BAA4B,CAC/C,MAAO,CAAAA,UAAU,CAACC,IAAI,CAACV,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAW,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBR,aAAa,CAAC,EAAE,CAAC,CACjBE,gBAAgB,CAAC,EAAE,CAAC,CAEpB;AACA,GAAI,CAACC,aAAa,CAACR,KAAK,CAAC,CAAE,CACzBK,aAAa,CAAC,wBAAwB,CAAC,CACvC,OACF,CACA,GAAIH,QAAQ,CAACY,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC1BP,gBAAgB,CAAC,uBAAuB,CAAC,CACzC,OACF,CAEA,GAAI,CACF,KAAM,CAAAR,KAAK,CAAC,CACVC,KAAK,CAAEe,aAAa,CAACf,KAAK,CAAC,CAC3BE,QAAQ,CAAEa,aAAa,CAACb,QAAQ,CAClC,CAAC,CAAC,CACJ,CAAE,MAAOc,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACtC,CACF,CAAC,CAED,KAAM,CAAAD,aAAa,CAAIG,KAAK,EAAK,CAC/B,MAAO,CAAA1B,SAAS,CAAC2B,QAAQ,CAAC1B,UAAU,CAACyB,KAAK,CAAC,CAAC,CAC9C,CAAC,CAED,mBACErB,KAAA,SAAMuB,QAAQ,CAAET,YAAa,CAAAU,QAAA,eAC3B1B,IAAA,UACE2B,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEvB,KAAM,CACbwB,QAAQ,CAAGZ,CAAC,EAAKX,QAAQ,CAACW,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC1CG,WAAW,CAAC,OAAO,CACpB,CAAC,CACDtB,UAAU,eAAIT,IAAA,QAAKgC,SAAS,CAAC,OAAO,CAAAN,QAAA,CAAEjB,UAAU,CAAM,CAAC,cACxDT,IAAA,UACE2B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAErB,QAAS,CAChBsB,QAAQ,CAAGZ,CAAC,EAAKT,WAAW,CAACS,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,UAAU,CACvB,CAAC,CACDpB,aAAa,eAAIX,IAAA,QAAKgC,SAAS,CAAC,OAAO,CAAAN,QAAA,CAAEf,aAAa,CAAM,CAAC,cAC9DX,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAvB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}