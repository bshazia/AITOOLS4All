{"ast":null,"code":"var _jsxFileName = \"/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n// Assume this function is defined in utils/securityUtils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const {\n    isAuthenticated,\n    loading,\n    logout\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const isLoggedIn = isAuthenticated;\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      navigate(\"/\"); // Redirect to home page if not authenticated\n    }\n  }, [isAuthenticated, loading, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this); // Show loading indicator while checking auth status\n  }\n  const {\n    response,\n    handleSendMessage\n  } = useChat();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const chatMessagesRef = useRef(null);\n  const sendMessage = async () => {\n    const sanitizedMessage = sanitizeMessage(userMessage);\n    if (sanitizedMessage.trim() !== \"\") {\n      const newMessages = [...messages, {\n        sender: \"You\",\n        message: sanitizedMessage\n      }];\n      setMessages(newMessages);\n      try {\n        await handleSendMessage(sanitizedMessage); // Pass sanitizedMessage here\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"AI 4.O\",\n          message: \"An error occurred. Please try again later.\"\n        }]);\n      }\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n  const sanitizeMessage = message => {\n    // Escape HTML entities to prevent XSS\n    return escapeHtml(DOMPurify.sanitize(message));\n  };\n\n  // Update chat messages when response changes\n  useEffect(() => {\n    if (response) {\n      const sanitizedResponse = sanitizeMessage(response);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"AI 4.O\",\n        message: sanitizedResponse\n      }]);\n    }\n  }, [response]); // This will trigger when `response` is updated\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          dangerouslySetInnerHTML: {\n            __html: DOMPurify.sanitize(`<strong>${escapeHtml(msg.sender)}:</strong> ${escapeHtml(msg.message)}`)\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: userMessage,\n          placeholder: \"Type your message...\",\n          onChange: e => setUserMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgsend,\n            alt: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"gYojYp+HbrpKTXkVM1KubOieHEw=\", true, function () {\n  return [useChat];\n});\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","imgsend","useChat","DOMPurify","escapeHtml","AuthContext","jsxDEV","_jsxDEV","ChatComponent","_s","isAuthenticated","loading","logout","navigate","useNavigate","isLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","response","handleSendMessage","messages","setMessages","userMessage","setUserMessage","chatMessagesRef","sendMessage","sanitizedMessage","sanitizeMessage","trim","newMessages","sender","message","error","prevMessages","sanitize","sanitizedResponse","handleKeyPress","event","key","current","scrollTop","scrollHeight","className","ref","map","msg","index","dangerouslySetInnerHTML","__html","type","value","placeholder","onChange","e","target","onKeyPress","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport \"../styles/Chatgpt.css\";\nimport imgsend from \"../images/sent.png\";\nimport useChat from \"../hooks/useChat\";\nimport DOMPurify from \"dompurify\";\nimport { escapeHtml } from \"../utils/securityUtils\";\nimport { AuthContext } from \"../contexts/AuthContext\"; \n// Assume this function is defined in utils/securityUtils.js\n\nfunction ChatComponent() {\n const { isAuthenticated, loading, logout } = useContext(AuthContext); \n const navigate = useNavigate();\n const isLoggedIn = isAuthenticated; \n\n\n useEffect(() => {\n   if (!loading && !isAuthenticated) {\n     navigate(\"/\"); // Redirect to home page if not authenticated\n   }\n }, [isAuthenticated, loading, navigate]);\n\n if (loading) {\n   return <div>Loading...</div>; // Show loading indicator while checking auth status\n }\n\n  const { response, handleSendMessage } = useChat();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState(\"\");\n  const chatMessagesRef = useRef(null);\n\n  const sendMessage = async () => {\n    const sanitizedMessage = sanitizeMessage(userMessage);\n\n    if (sanitizedMessage.trim() !== \"\") {\n      const newMessages = [\n        ...messages,\n        { sender: \"You\", message: sanitizedMessage },\n      ];\n      setMessages(newMessages);\n\n      try {\n        await handleSendMessage(sanitizedMessage); // Pass sanitizedMessage here\n      } catch (error) {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            sender: \"AI 4.O\",\n            message: \"An error occurred. Please try again later.\",\n          },\n        ]);\n      }\n\n      setUserMessage(\"\"); // Clear the input field\n    }\n  };\n\n  const sanitizeMessage = (message) => {\n    // Escape HTML entities to prevent XSS\n    return escapeHtml(DOMPurify.sanitize(message));\n  };\n\n  // Update chat messages when response changes\n  useEffect(() => {\n    if (response) {\n      const sanitizedResponse = sanitizeMessage(response);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"AI 4.O\", message: sanitizedResponse },\n      ]);\n    }\n  }, [response]); // This will trigger when `response` is updated\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"chat-app\">\n      <div className=\"chat-container\">\n        <div className=\"chat-messages\" ref={chatMessagesRef}>\n          {messages.map((msg, index) => (\n            <div\n              key={index}\n              className=\"chat-message\"\n              dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(\n                  `<strong>${escapeHtml(msg.sender)}:</strong> ${escapeHtml(\n                    msg.message\n                  )}`\n                ),\n              }}\n            />\n          ))}\n        </div>\n        <div className=\"chat-input-container\">\n          <input\n            type=\"text\"\n            className=\"chat-input\"\n            value={userMessage}\n            placeholder=\"Type your message...\"\n            onChange={(e) => setUserMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button className=\"send-button\" onClick={sendMessage}>\n            <img src={imgsend} alt=\"Send\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}