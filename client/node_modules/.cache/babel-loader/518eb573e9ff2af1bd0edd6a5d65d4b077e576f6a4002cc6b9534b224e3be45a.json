{"ast":null,"code":"// src/contexts/AuthContext.js\nimport React,{createContext,useState,useEffect}from\"react\";import axios from\"axios\";import authService from\"../services/authService\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const navigate=useNavigate();const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);// Add loading state\nconst getCsrfToken=async()=>{const response=await axios.get(`${process.env.REACT_APP_API_URL}/get-csrf-token`,{withCredentials:true});return response.data.csrfToken;};const login=async userData=>{try{const csrfToken=await getCsrfToken();const response=await authService.login(userData,csrfToken);localStorage.setItem(\"token\",response.token);// Save the token in localStorage\nsetUser(response.user);setIsAuthenticated(true);navigate(\"/dashboard\");// Navigate to dashboard after login\n}catch(error){console.error(\"Login failed\",error);setIsAuthenticated(false);}};const register=async userData=>{try{const csrfToken=await getCsrfToken();await authService.register(userData,csrfToken);navigate(\"/dashboard\");}catch(error){console.error(\"Registration failed\",error);}};const logout=()=>{authService.logout();localStorage.removeItem(\"token\");setUser(null);setIsAuthenticated(false);navigate(\"/\");};useEffect(()=>{// Check if token is in localStorage\nconst token=localStorage.getItem(\"token\");if(token){setIsAuthenticated(true);}setLoading(false);// Set loading to false after checking\n},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isAuthenticated,loading,login,register,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","authService","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","navigate","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","getCsrfToken","response","get","process","env","REACT_APP_API_URL","withCredentials","data","csrfToken","login","userData","localStorage","setItem","token","error","console","register","logout","removeItem","getItem","Provider","value"],"sources":["/Users/bsjatoi/Desktop/Jatoi_Startup/AITools4all/client/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport authService from \"../services/authService\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const getCsrfToken = async () => {\n    const response = await axios.get(\n      `${process.env.REACT_APP_API_URL}/get-csrf-token`,\n      {\n        withCredentials: true,\n      }\n    );\n    return response.data.csrfToken;\n  };\n\n  const login = async (userData) => {\n    try {\n      const csrfToken = await getCsrfToken();\n      const response = await authService.login(userData, csrfToken);\n      localStorage.setItem(\"token\", response.token); // Save the token in localStorage\n      setUser(response.user);\n      setIsAuthenticated(true);\n      navigate(\"/dashboard\"); // Navigate to dashboard after login\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const csrfToken = await getCsrfToken();\n      await authService.register(userData, csrfToken);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  const logout = () => {\n    authService.logout();\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    // Check if token is in localStorage\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setLoading(false); // Set loading to false after checking\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, isAuthenticated, loading, login, register, logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}